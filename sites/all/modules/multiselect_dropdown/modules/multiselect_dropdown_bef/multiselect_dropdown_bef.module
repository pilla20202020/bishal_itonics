<?php

/**
 * @file
 * Hook implementations for multiselect_dropdown_bef.
 */

declare(strict_types=1);

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_help().
 */
function multiselect_dropdown_bef_help(
  string $route_name,
  RouteMatchInterface $route_match,
): string {
  $output = '';
  if ($route_name === 'help.page.multiselect_dropdown_bef') {
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('Provides a multiselect dropdown filter widget for Better Exposed Filters.') . '</p>';
    // phpcs:ignore Drupal.Arrays.Array.LongLineDeclaration
    $output .= '<p>' . t('For a full description of the module and configuration instructions visit the <a href=":project" target="_blank">project page</a> or consult the <a href=":readme" target="_blank">README.md</a> in the module directory.', [':project' => 'https://www.drupal.org/project/multiselect_dropdown', ':readme' => 'https://git.drupalcode.org/project/multiselect_dropdown/-/blob/1.0.x/README.md']) . '</p>';
    $output .= '<p>' . t('Submit bug reports, feature suggestions or track changes in the <a href=":queue" target="_blank">issue queue</a>.', [':queue' => 'https://www.drupal.org/project/issues/multiselect_dropdown']) . '</p>';
  }
  return $output;
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function multiselect_dropdown_bef_theme_suggestions_alter(
  array &$suggestions,
  array $variables,
  string $hook,
): void {
  if (
    $hook === 'multiselect_dropdown'
    && ($view_id = $variables['element']['#context']['#view_id'] ?? '')
    && ($display_id = $variables['element']['#context']['#display_id'] ?? '')
  ) {
    $name = $variables['element']['#name'];
    $suggestions[] = "{$hook}__$view_id";
    $suggestions[] = "{$hook}__{$view_id}__$name";
    $suggestions[] = "{$hook}__{$view_id}__{$display_id}";
    $suggestions[] = "{$hook}__{$view_id}__{$display_id}__$name";
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function multiselect_dropdown_bef_preprocess_multiselect_dropdown(array &$variables): void {
  if (\in_array('multiselect_dropdown/views', $variables['element']['#attached']['library'] ?? [], TRUE)) {
    assert($variables['attributes'] instanceof Attribute);
    if ($variables['element']['#persist_open']) {
      $variables['attributes']->setAttribute('data-multiselect-dropdown-persist-open', '');
    }

    assert($variables['wrapper_attributes'] instanceof Attribute);
    $variables['wrapper_attributes']->setAttribute(
      'aria-label',
      (string) t('Close this select and return to the form by pressing escape. Use the space bar to select or deselect items. Submit a filter by pressing enter when focusing an item. Press shift-enter to submit a filter and skip to the results when focusing an item.'),
    );
  }
}
