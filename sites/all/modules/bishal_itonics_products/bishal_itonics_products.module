<?php
/**
 * Implements hook_menu().
 */
/**
 * Implements hook_menu().
 */
function bishal_itonics_products_menu() {
  $items = array();

  // Route for adding/editing a product.
  $items['admin/products/add'] = array(
    'title' => 'Add Product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bishal_itonics_products_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Route for listing all products.
  $items['admin/products'] = array(
    'title' => 'Products List',
    'page callback' => 'bishal_itonics_products_list',
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Route for deleting a product (with confirmation).
  $items['admin/products/delete/%'] = array(
    'title' => 'Delete Product',
    'page callback' => 'bishal_itonics_products_delete',
    'page arguments' => array(3), // The product ID is passed as a parameter.
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  // Route for viewing a product.
  $items['admin/products/view/%'] = array(
    'title' => 'View Product',
    'page callback' => 'bishal_itonics_products_view',
    'page arguments' => array(3), // The product ID is passed as a parameter.
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/categories/create'] = array(
    'title' => 'Create Category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bishal_itonics_create_category_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Form callback for adding/editing a product.
 */
function bishal_itonics_products_form($form, &$form_state, $product = NULL) {
  // Check if we are editing an existing product, by getting the 'id' from the query string
  drupal_add_library('system', 'ajax');
  $product_id = isset($_GET['id']) ? $_GET['id'] : NULL;

  // If product_id is available, load the product data
  if ($product_id) {
    $product = db_select('bishal_itonics_products', 'p')
      ->fields('p')
      ->condition('product_id', $product_id)
      ->execute()
      ->fetchObject();
  }

  // If $product is still empty (not found), redirect or show an error.
  if (empty($product) && !empty($product_id)) {
    drupal_set_message(t('Product not found.'), 'error');
    $form_state['redirect'] = 'admin/products'; // Redirect to product list if not found
    return $form;
  }

  // Split the expiry_date into year, month, and day components
  $expiry_date_parts = !empty($product->expiry_date) ? explode('-', $product->expiry_date) : array('', '', '');

  $expiry_date = array();
  $expiry_date['year'] = isset($expiry_date_parts[0]) ? $expiry_date_parts[0] : '';
  $expiry_date['month'] = isset($expiry_date_parts[1]) ? $expiry_date_parts[1] : '';
  $expiry_date['day'] = isset($expiry_date_parts[2]) ? $expiry_date_parts[2] : '';

  $is_edit = !empty($product);

  // Fetch categories from the database
  $categories_query = db_select('bishal_itonics_categories', 'c')
    ->fields('c', array('category_id', 'category_name'))
    ->execute();

  $categories = array();
  foreach ($categories_query as $category) {
    $categories[$category->category_id] = $category->category_name;
  }

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#required' => TRUE,
    '#default_value' => $is_edit ? $product->title : '',
  );

  $form['image'] = array(
    '#type' => 'managed_file',
    '#title' => t('Image'),
    '#upload_location' => 'public://product_images/',
    '#default_value' => $is_edit ? $product->image : '',
  );

  $form['summary'] = array(
    '#type' => 'textarea',
    '#title' => t('Summary'),
    '#default_value' => $is_edit ? $product->summary : '',
  );

  $form['description'] = array(
    '#type' => 'text_format',
    '#title' => t('Description'),
    '#default_value' => $is_edit ? $product->description : '',
    '#format' => 'full_html',
  );

  // $form['category'] = array(
  //   '#type' => 'multiselect',
  //   '#title' => t('Category'),
  //   '#options' => array(
  //     'fashion' => 'Fashion',
  //     'electronics' => 'Electronics',
  //     'beauty' => 'Beauty',
  //   ),
  //   '#default_value' => $is_edit ? explode(',', $product->category) : array(),
  //   '#attributes' => array('class' => array('multiselect')),
  // );

  $form['category'] = array(
    '#type' => 'multiselect',  // Changed from 'multiselect' to 'select' for better UX
    '#title' => t('Category'),
    '#options' => $categories,
    '#default_value' => $is_edit ? explode(',', $product->category) : array(),  // assuming 'category_id' for products
        '#attributes' => array('class' => array('multiselect')),
  );

  $form['new_category_name'] = array(
    '#type' => 'textfield',
    '#title' => t('New Category Name'),
    '#description' => t('Enter a new category name if you want to create a new one.<br>Note*:Please reload the page after creating a new category.'),
    '#default_value' => '',
    '#required' => FALSE,
  );

  $form['create_category_button'] = array(
    '#type' => 'submit',
    '#value' => t('Create Category'),
    '#submit' => array('bishal_itonics_create_category_form'),
    '#ajax' => array(
      'callback' => 'bishal_itonics_create_category_ajax_callback',
      'wrapper' => 'category-message-wrapper',
      'effect' => 'fade',
      'progress' => array(
        'type' => 'throbber',
        'message' => t('Creating category...'),
      ),
    ),
  );

  $form['category_message_wrapper'] = array(
    '#type' => 'container',
    '#attributes' => array('id' => 'category-message-wrapper'),
  );


  $form['type'] = array(
    '#type' => 'radios',
    '#title' => t('Color'),
    '#options' => array('red' => 'Red', 'blue' => 'Blue'),
    '#default_value' => $is_edit ? $product->type : 'red',
    '#required' => TRUE, // Makes the field required
    '#wrapper_attributes' => array('class' => 'form-type-wrapper'),
  );

  $form['owner_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Owner Email'),
    '#required' => TRUE,
    '#default_value' => $is_edit ? $product->owner_email : '',
    '#element_validate' => array('bishal_itonics_validate_email'),
  );

  $form['expiry_date'] = array(
    '#type' => 'date_popup',
    '#title' => t('Expiry Date'),
    '#date_format' => 'Y-m-d',
    '#date_year_range' => '-5:+5',
    '#default_value' => $is_edit ? $product->expiry_date : '',
    '#required' => TRUE,
  );

  $form['product_id'] = array(
    '#type' => 'hidden',
    '#default_value' => $is_edit ? $product->product_id : '',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => $is_edit ? t('Update Product') : t('Add Product'),
    '#submit' => array('bishal_itonics_products_form_submit'),
  );

  drupal_add_css(drupal_get_path('module', 'multiselect') . '/multiselect.css');
  drupal_add_js(drupal_get_path('module', 'multiselect') . '/multiselect.js');
  drupal_add_css(drupal_get_path('module', 'bishal_itonics_products') . '/css/bishal_itonics_products.css');

  return $form;
}


/**
 * Submit handler for the product form.
 */
function bishal_itonics_products_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  $product_id = $values['product_id']; // Retrieve product_id from the form
  $expiry_date = $values['expiry_date'];

  $description = check_markup($values['description']['value'], TRUE);
  $summary = check_plain($values['summary']);  // Use check_plain for non-HTML content

  if (!empty($product_id)) {
    // If product_id exists, perform an update
    db_update('bishal_itonics_products')
      ->fields(array(
        'title' => $values['title'],
        'image' => $values['image'],
        'summary' => $summary,
        'description' => $description,
        'category' => implode(',', $values['category']),
        'type' => $values['type'],
        'owner_email' => $values['owner_email'],
        'expiry_date' => $expiry_date,
      ))
      ->condition('product_id', $product_id)
      ->execute();
    drupal_set_message(t('Product updated successfully.'));
  } else {
    // If no product_id, perform an insert (add a new product)
    db_insert('bishal_itonics_products')
      ->fields(array(
        'title' => $values['title'],
        'image' => $values['image'],
        'summary' => $values['summary'],
        'description' => $values['description']['value'],
        'category' => implode(',', $values['category']),
        'type' => $values['type'],
        'owner_email' => $values['owner_email'],
        'expiry_date' => $expiry_date,
      ))
      ->execute();
    drupal_set_message(t('Product added successfully.'));
  }

  $form_state['redirect'] = 'admin/products';
}


/**
 * Callback for listing products.
 */
function bishal_itonics_products_list() {
  $create_button = l(t('Create Product'), 'admin/products/add', array('attributes' => array('class' => array('button createProduct'))));
  $header = array(
    array('data' => t('Title'), 'field' => 'title'),
    array('data' => t('Image'), 'field' => 'image'), // Added image column
    array('data' => t('Owner Email'), 'field' => 'owner_email'),
    array('data' => t('Expiry Date'), 'field' => 'expiry_date'),
    t('Operations'),
  );

  $query = db_select('bishal_itonics_products', 'p')
    ->fields('p', array('product_id', 'title', 'owner_email', 'expiry_date', 'image')); // Include image field

  $rows = array();
  foreach ($query->execute() as $product) {
    $image_column = t('No image');

    if (!empty($product->image)) {
      $image_file = file_load($product->image);
      if ($image_file) {
        $image_url = file_create_url($image_file->uri);
        $image_column = '<img src="' . $image_url . '" alt="' . check_plain($product->title) . '" width="50" height="50" />';
      }
    }

    // Add the product details, including the image column
    $rows[] = array(
      $product->title,
      $image_column, // Image column
      $product->owner_email,
      $product->expiry_date,
      l('View', 'admin/products/view/' . $product->product_id) . ' | ' .
      l('Edit', 'admin/products/add', array('query' => array('id' => $product->product_id))) . ' | ' .
      l('Delete', 'admin/products/delete/' . $product->product_id),
    );
  }

  return $create_button . theme('table', array('header' => $header, 'rows' => $rows));
}

/**
 * Callback for deleting a product.
 */
function bishal_itonics_products_delete($product_id) {
  $product = db_select('bishal_itonics_products', 'p')
    ->fields('p', array('product_id', 'title'))
    ->condition('product_id', $product_id)
    ->execute()
    ->fetchObject();

  if (!$product) {
    drupal_set_message(t('Product not found.'), 'error');
    drupal_goto('admin/products');
  }

  // Build the confirmation form.
  return drupal_get_form('bishal_itonics_products_delete_confirm_form', $product);
}

function bishal_itonics_products_delete_confirm_form($form, &$form_state, $product) {
  $form['product_id'] = array(
    '#type' => 'hidden',
    '#value' => $product->product_id,
  );

  $form['message'] = array(
    '#markup' => t('Are you sure you want to delete the product: %title?', array('%title' => $product->title)),
  );

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Delete'),
    '#button_type' => 'primary',
    '#attributes' => array(
      'class' => array('button delete-button', 'btn', 'btn-danger'),
    ),
  );

  $form['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => l(t('Cancel'), 'admin/products', array('attributes' => array('class' => array('button cancel-button')))),
  );

  return $form;
}

function bishal_itonics_products_delete_confirm_form_submit($form, &$form_state) {
  $product_id = $form_state['values']['product_id'];
  if ($product_id) {
    db_delete('bishal_itonics_products')
      ->condition('product_id', $product_id)
      ->execute();
    drupal_set_message(t('Product deleted successfully.'));
  } else {
    drupal_set_message(t('Product not found.'), 'error');
  }

  $form_state['redirect'] = 'admin/products';
}

/**
 * Callback for viewing a product's details.
 */
function bishal_itonics_products_view($product_id) {
  // Fetch product data from the database.
  $product = db_select('bishal_itonics_products', 'p')
    ->fields('p')
    ->condition('product_id', $product_id)
    ->execute()
    ->fetchObject();

  // If the product does not exist, show an error message.
  if (empty($product)) {
    drupal_set_message(t('Product not found.'), 'error');
    drupal_goto('admin/products');
  }

  // Prepare the product details for display.
  $output = '<h2>' . check_plain($product->title) . '</h2>';
  $output .= '<p><strong>' . t('Owner Email') . ':</strong> ' . check_plain($product->owner_email) . '</p>';
  $output .= '<p><strong>' . t('Expiry Date') . ':</strong> ' . check_plain($product->expiry_date) . '</p>';
  $output .= '<p><strong>' . t('Summary') . ':</strong> ' . check_plain($product->summary) . '</p>';
  $output .= '<p><strong>' . t('Description') . ':</strong><br>' . check_plain($product->description) . '</p>';

  if (!empty($product->category)) {
    // Convert the stored category string back to an array.
    $categories = explode(',', $product->category);
    $category_list = '<ul>';
    foreach ($categories as $category) {
      $category_list .= '<li>' . check_plain($category) . '</li>';
    }
    $category_list .= '</ul>';
    $output .= '<p><strong>' . t('Categories') . ':</strong> ' . $category_list . '</p>';
  }

  $output .= '<p><strong>' . t('Color') . ':</strong> ' . check_plain($product->type) . '</p>';


  // Display the product image if it exists.
  if (!empty($product->image)) {
    $image_file = file_load($product->image);
    if ($image_file) {
      $image_url = file_create_url($image_file->uri);
      $output .= '<p><img src="' . $image_url . '" alt="' . check_plain($product->title) . '" / height="200px"></p>';
      $file_name = basename($image_file->uri);
      $output .= '<span class="file"><img class="file-icon" alt="Image icon" title="image/jpeg" src="/drupal7/modules/file/icons/image-x-generic.png"> <a href="' . $image_url . '" type="image/jpeg">' . $file_name . '</a></span>';
    }
  }

  // Add a link to go back to the product list.
  $output .= '<br>' . l(t('Back to Products'), 'admin/products');

  return $output;
}

/**
 * Custom validation callback for email.
 */
function bishal_itonics_validate_email($element, &$form_state, $form) {
  if (!valid_email_address($element['#value'])) {
    form_error($element, t('Please enter a valid email address.'));
  }
}


function bishal_itonics_create_category_ajax_callback($form, &$form_state) {
  $message = '';

  if (!empty($form_state['values']['new_category_name'])) {
      // Insert the new category into the database
      db_insert('bishal_itonics_categories')
          ->fields(array('category_name' => $form_state['values']['new_category_name']))
          ->execute();

      // Clear the field value after successful creation
      $form_state['values']['new_category_name'] = '';

      $message = '<div class="messages messages--status" id="category-message">' . t('Category created successfully.<br> Please reload this page') . '</div>';

      $form_state['rebuild'] = TRUE; // Ensure the form is rebuilt

      // Attach reload script and message hiding script
      drupal_add_js('
          setTimeout(function() {
              var messageElement = document.getElementById("category-message");
              if (messageElement) {
                  messageElement.style.display = "none"; // Hide the message first
              }
              window.location.reload(); // Reload the page after the message is hidden
          }, 5000); // Wait 5 seconds before hiding the message and reloading the page
      ', 'inline');
  } else {
      $message = '<div class="messages messages--error" id="category-message">' . t('Please enter a category name.') . '</div>';
  }

  return array(
    '#markup' => $message, // The message will be shown inside the 'category-message-wrapper'
  );
}


?>


